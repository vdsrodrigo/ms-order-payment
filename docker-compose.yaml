services:

  mongo:
    restart: always
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    networks:
      - mongo-net
    ports:
      - '27017:27017'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data:Z
      - zookeeper-log:/var/lib/zookeeper/log:Z
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    volumes:
      - kafka-data:/var/lib/kafka/data:Z
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  akhq:
    image: tchiotludo/akhq
    networks:
      - broker-kafka
    depends_on:
      - kafka1

    ports:
      - 8080:8080
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka1:29092, kafka2:29093"

networks:
  mongo-net:
  broker-kafka:
    driver: bridge

volumes:
  mongo_data:
  db-data:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local
